<snippet>
	<content><![CDATA[
/************************************************* TRIES *******************************************************************/
/* 

make head node and number of child, type of value
to make trie insert elements to trie
to search a maximum path (xor in this case) call traceMaxPath

*/

class trieNode{
public:
	${1:int} value;
	trieNode* child[${2:2}];
	trieNode(){
		value=0;
		${3:child[0]=NULL;
		child[1]=NULL;}
	}
};

void insertTrie(int num,trieNode* head){
	trieNode* curr=head;
	for(int i=31;i>=0;i--){
		if(1&(num>>i)){
			if(!curr->child[1])
				curr->child[1]=new trieNode();
			curr=curr->child[1];
		}
		else{
			if(!curr->child[0])
				curr->child[0]=new trieNode();
			curr=curr->child[0];
		}
	}
}

int maximum=INT_MIN;

void traceMaxPath(int pre,trieNode* head){
	trieNode* curr=head;
	int temp=0;
	for(int i=31;i>=0;i--){
		if(1&(pre>>i)){
			if(curr->child[0]){
				temp+=pow(2,i);
				curr=curr->child[0];
			}
			else
				curr=curr->child[1];
			}
		else{
			if(curr->child[1]){
				temp+=pow(2,i);
				curr=curr->child[1];
			}
			else
				curr=curr->child[0];
		}
	}
	maximum=max(temp,maximum);
	//cout<<maximum<<endl;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>trie</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
